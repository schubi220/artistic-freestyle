# Generated by Django 4.0.4 on 2022-05-24 12:01

import artistic.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(help_text="Kürzel für die URL, nur Buchstaben, Zahlen und Striche, keine Leerzeichen, z.B. 'odm-steinach-2017'", unique=True, verbose_name='Kürzel')),
                ('firstDay', models.DateField(verbose_name='Von')),
                ('lastDay', models.DateField(verbose_name='Bis')),
                ('description', models.TextField(blank=True, verbose_name='beschreibung')),
            ],
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('minAge', models.IntegerField(verbose_name='minnimales Alter')),
                ('maxAge', models.IntegerField(verbose_name='maximales Alter')),
                ('discipline', models.CharField(default='FA', choices=[('TR', 'Track: Racing'), ('RR', 'Road: Races'), ('MR', 'Mountain Unicycling: Races'), ('MC', 'Mountain Unicycling: Cyclocross'), ('FA', 'Freestyle: Artistic'), ('FS', 'Freestyle: Standard Skill'), ('FX', 'Freestyle: X-Style'), ('UF', 'Urban: Flatland'), ('US', 'Urban: Street'), ('UT', 'Urban: Trials'), ('UP', 'Urban: Speed Trials'), ('UJ', 'Urban: Jumps'), ('TH', 'Team Sports: Hockey'), ('TB', 'Team Sports: Basketball')], max_length=2)),
                ('event', models.ForeignKey(default='1', on_delete=django.db.models.deletion.PROTECT, to='artistic.event')),
            ],
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=10, verbose_name='Key')),
                ('value', models.CharField(max_length=50, verbose_name='Value')),
            ],
        ),
        migrations.CreateModel(
            name='Judge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('possition', models.CharField(max_length=2, verbose_name='Possition')),
                ('type', models.CharField(choices=[('T', 'Technik'), ('P', 'Performance'), ('D', 'Abstiege')], max_length=1, verbose_name='Judge Art')),
                ('code', models.CharField(default=artistic.models.generate_code, max_length=8, unique=True)),
                ('isActive', models.BooleanField(default=False, verbose_name='Eingeloggt?')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='artistic.competition')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=100, verbose_name='Vorname')),
                ('lastname', models.CharField(max_length=100, verbose_name='Nachname')),
                ('gender', models.CharField(choices=[('w', 'weiblich'), ('m', 'männlich'), ('d', 'divers')], max_length=1, verbose_name='Geschlecht')),
                ('email', models.EmailField(max_length=254, verbose_name='E-Mail')),
                ('club', models.CharField(blank=True, max_length=100, verbose_name='Verein oder Ort')),
                ('dateofbirth', models.DateField()),
                ('street', models.CharField(blank=True, max_length=255, null=True, verbose_name='Straße')),
                ('postcode', models.CharField(blank=True, max_length=20, null=True, verbose_name='PLZ')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Stadt')),
                ('country', models.CharField(blank=True, default='DE', max_length=2, null=True, verbose_name='Land')),
                ('event', models.ForeignKey(default='1', on_delete=django.db.models.deletion.PROTECT, to='artistic.event')),
            ],
        ),
        migrations.CreateModel(
            name='Start',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(verbose_name='Reihenfolge')),
                ('info', models.JSONField(default={})),
                ('time', models.DateTimeField(verbose_name='Zeit des Starts')),
                ('isActive', models.BooleanField(default=True, verbose_name='Started?')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='artistic.competition')),
                ('people', models.ManyToManyField(blank=True, to='artistic.person')),
            ],
        ),
        migrations.AddField(
            model_name='competition',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='artistic.event'),
        ),
        migrations.CreateModel(
            name='Value',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('values', models.JSONField(default={})),
                ('judge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='artistic.judge')),
                ('start', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='artistic.start')),
            ],
            options={
                'unique_together': {('start', 'judge')},
            },
        ),
    ]
